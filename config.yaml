app: satprod

model: 'TCN' #'SIN', 'LSTM', 'TCN', 'TCN_Bai', 'MLR'
train_on_one_batch: False

data_config:
  parks: ['skom'] # ['bess', 'vals','skom','yvik']
  numerical_features: ['production'] #['production', 'speed', 'direction', 'temporal']
  use_img_features: False
  img_extraction_method: 'resnet' # 'lenet', 'resnet', 'vgg'
  
  pred_sequence_length: 5 # if changing, run 'satprod num update_formatted_files'
  use_numerical_forecasts: True
  use_img_forecasts: False
  crop_image: True
  
  valid_start: {'year': 2019, 'month': 5, 'day': 12, 'hour': 0}
  test_start: {'year': 2020, 'month': 5, 'day': 12, 'hour': 0}
  test_end: {'year': 2021, 'month': 5, 'day': 11, 'hour': 23}

train_config:
  batch_size: 64
  num_epochs: 40
  learning_rate: 1.0e-3
  scheduler_gamma: 0.9
  random_seed: 0
  weight_decay: 0.0 # 0.001, 0.0001, 0.00001
  predict_current_time: False

img_extraction_methods:
  lenet:
    channels: [1, 16, 32]
    kernel_size_conv: [8, 4]
    stride_conv: [4, 4]
    padding_conv: [0, 0]
    kernel_size_pool: [3, 2]
    stride_pool: [3, 1]
    padding_pool: [0, 0]
  resnet:
    output_size: 256
    freeze_all_but_last_layer: False
  vgg:
    output_size: 256
    freeze_all_but_last_layer: True

models:
  lstm:
    sequence_length: 5 # 5 13 29 61
    hidden_size: 64 # 32 48 64
    linear_size: 128 # 64 128 256
    num_layers: 1
    dropout: 0.2 # 0.2 0.3 0.4
  tcn:
    channels: [32, 32, 32, 32] # 1-4
    kernel_size: 3 # 3-5
    dilation_base: 2 # 1-2
    dropout: 0.2 # 0-0.1-0.5
    only_predict_future_values: True
  tcn_bai:
    channels: [32, 32, 32]
    kernel_size: 3
    dropout: 0.0
  mlr:
    sequence_length: 3
  sin:
    dropout: 0.5 # 0.3, 0.5
    sequence_length: 1

comparison: # {'timestamp': , 'model_name': , 'sorting': 'num'}
  skom: 
    model1: {'timestamp': '2021-06-13-06-27', 'model_name': 'MLR', 'sorting': 'num'}
    model2: {'timestamp': '2021-06-14-02-03', 'model_name': 'LSTM', 'sorting': 'num'}
    model3: #{'timestamp': '2021-06-14-13-02', 'model_name': 'TCN', 'sorting': 'num'}
    model4: #{'timestamp': '2021-06-15-21-27', 'model_name': 'TCN', 'sorting': 'num'}
    model5: 
    model6: 
    model7: 
  bess:
    model1: {'timestamp': '2021-06-13-18-35', 'model_name': 'MLR', 'sorting': 'num'}
    model2: {'timestamp': '2021-06-17-16-56', 'model_name': 'TCN', 'sorting': 'num'}
    model3: 
    model4: 
    model5: 
    model6: 
  vals:
    model1: {'timestamp': '2021-06-13-19-14', 'model_name': 'MLR', 'sorting': 'num'}
    model2: {'timestamp': '2021-06-16-00-51', 'model_name': 'LSTM', 'sorting': 'num'}
    model3: {'timestamp': '2021-06-16-11-29', 'model_name': 'TCN', 'sorting': 'num'}
    model4: {'timestamp': '2021-06-16-12-58', 'model_name': 'TCN', 'sorting': 'num'}
    model5:
    model6:
  yvik:
    model1: {'timestamp': '2021-06-13-07-52', 'model_name': 'MLR', 'sorting': 'num'}
    model2: {'timestamp': '2021-06-14-07-00', 'model_name': 'LSTM', 'sorting': 'num'}
    model3: {'timestamp': '2021-06-15-00-25', 'model_name': 'TCN', 'sorting': 'num'}
    model4: {'timestamp': '2021-06-16-00-15', 'model_name': 'TCN', 'sorting': 'num'}
    model5:
    model6:
  all:
    model1: {'timestamp': '2021-06-13-06-35', 'model_name': 'MLR', 'sorting': 'num'}
    model2: {'timestamp': '2021-06-15-21-48', 'model_name': 'TCN', 'sorting': 'num'}
    model3: {'timestamp': '2021-06-14-14-00', 'model_name': 'TCN', 'sorting': 'num'}
    model4: {'timestamp': '2021-06-14-02-05', 'model_name': 'LSTM', 'sorting': 'num'}
    model5:
    model6:
